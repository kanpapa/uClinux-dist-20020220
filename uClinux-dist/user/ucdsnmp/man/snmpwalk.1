.\* /***********************************************************
.\" 	Copyright 1988, 1989 by Carnegie Mellon University
.\" 
.\"                       All Rights Reserved
.\" 
.\" Permission to use, copy, modify, and distribute this software and its 
.\" documentation for any purpose and without fee is hereby granted, 
.\" provided that the above copyright notice appear in all copies and that
.\" both that copyright notice and this permission notice appear in 
.\" supporting documentation, and that the name of CMU not be
.\" used in advertising or publicity pertaining to distribution of the
.\" software without specific, written prior permission.  
.\" 
.\" CMU DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING
.\" ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL
.\" CMU BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR
.\" ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
.\" WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
.\" ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
.\" SOFTWARE.
.\" ******************************************************************/
.TH SNMPWALK 1 "18 Dec 1999"
.UC 4
.SH NAME
snmpwalk - communicates with a network entity using SNMP GET Next Requests.
.SH SYNOPSIS
snmpwalk [common arguments] [-C APPOPTS] [objectID]
.SH DESCRIPTION
Snmpwalk is an SNMP application that uses GET NEXT Requests to query for a tree
of information about a network entity.
.PP
A variable may also be given on the
command line.  This variable specifies which portion of the object identifier
space will be searched using GET NEXT Requests.  All variables in the subtree
below the given variable are queried and their values presented to the user.
Each variable name is given in the format specified in
.IR variables (5).
.PP
If the "objectID" argument is not present, snmpwalk will search MIB-2.
.PP
For example
.PP
.I snmpwalk zeus public system
.PP
will retrieve all of the variables under system:
.PP
.I system.sysDescr.0 =
"SunOS zeus.net.cmu.edu 4.1.3_U1 1 sun4m"
.br
.I system.sysObjectID.0 = OID: enterprises.hp.nm.hpsystem.10.1.1
.br
.I "system.sysUpTime.0 = Timeticks: (155274552) 17 days, 23:19:05"
.br
.I system.sysContact.0 =
""
.br
.I system.sysName.0 =
"zeus.net.cmu.edu"
.br
.I system.sysLocation.0 =
""
.br
.I system.sysServices.0 = 72
.PP
If the network entity has an error processing the request packet, an error
packet will be returned and a message will be shown, helping to pinpoint why
the request was malformed.
.PP
If the tree search causes attempts to search beyond the end of the MIB,
a message will be displayed:
.PP
.I End of MIB.
.PP
.SH "OPTIONS"
In addition to the arguments defined in the snmpcmd(1) manual page,
the following options are supported as well:
.IP "-Ci"
Includes the requested oid in the search range.  Normally snmpwalk
uses getnexts starting with the oid you request and returns all
results in the MIB tree below the one you requested.  Sometimes, you
may wish to include the OID specified on the command line in the
printed results if it is a valid OID in the tree itself.  This option
lets you do this.
.IP "-Cp"
Upon completion, snmpwalk will print the number of variables found
during the walk.
.SH "SEE ALSO"
snmpcmd(1), variables(5).
